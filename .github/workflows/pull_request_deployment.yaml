name: PR Deployment CI/CD

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  build:
    if: github.event.action != 'closed'
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build src/WebApplication/WebApplication.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish src/WebApplication/WebApplication.csproj -c Release -o ./deploy

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./deploy

  deploy:
    if: github.event.action != 'closed'
    runs-on: windows-latest
    needs: build
    environment:
      name: 'PR-slot-deployment'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Deployment Slot
        run: |
          SLOT_NAME=pr-${{ github.event.number }}
          az webapp deployment slot create --name prdeployment-webapp --resource-group YourResourceGroup --slot $SLOT_NAME

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'prdeployment-webapp'
          slot-name: 'pr-${{ github.event.number }}'
          package: './deploy'

  cleanup:
    if: github.event.action == 'closed'
    runs-on: windows-latest

    steps:
      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Delete Deployment Slot
        run: |
          SLOT_NAME=pr-${{ github.event.number }}
          az webapp deployment slot delete --name prdeployment-webapp --resource-group YourResourceGroup --slot $SLOT_NAME --no-wait
